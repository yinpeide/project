<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
				         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				         http://www.springframework.org/schema/context
				         http://www.springframework.org/schema/context/spring-context-3.0.xsd
				         http://www.springframework.org/schema/tx
				         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				         http://www.springframework.org/schema/aop 
				         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
				         
		<!--  1.包扫描 -->
		<context:component-scan base-package="com.itcast.service,com.itcast.dao"></context:component-scan>
		<!-- 2.jdbc属性配置文件 -->
		<context:property-placeholder location="classpath:resources/jdbc.properties"/>
		<!-- 3.数据源 dataSource -->
		<bean id="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
			<property name="driverClassName" value="${driver}"/>
			<property name="url" value="${url}"/>
			<property name="username" value="${username}"/>
			<property name="password" value="${password}"/>
		</bean>
		<!-- 4.sqlSessionFactory -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<!-- spring和mybatis整合 -->
			<!-- Mybatis核心配置文件 -->
			<property name="configLocation" value="classpath:resources/sqlMapConfig.xml"/>
			<!-- mybaits映射文件 -->
			<property name="mapperLocations" value="classpath:com/itcast/entity/mapper/*.xml"/>
		</bean>
		
		<!-- 5事务 -->
		<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		
		<!-- 6 声明事务advice 的管理者为txManager-->
		<tx:advice id="txAdvice" transaction-manager="txManager">
			<tx:attributes>
				<tx:method name="save*" propagation="REQUIRED"/>
				<tx:method name="insert*" propagation="REQUIRED"/>
				<tx:method name="update*" propagation="REQUIRED"/>
				<tx:method name="delete*" propagation="REQUIRED"/>
				
				<tx:method name="find*" read-only="true"/>
				<tx:method name="get*" read-only="true"/>
				<tx:method name="view*" read-only="true"/>
				<tx:method name="*" read-only="true"/>
			</tx:attributes>
		</tx:advice>
		
		<!-- 7.指定一个aop去引用上面的事务,下面的意思是 在service包以及子包下定义的任意方法的执行-->
		<aop:config >
			<aop:pointcut expression="execution(* com.itcast.service..*.*(..))" id="pointCut"/>
			<aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
		</aop:config> 
</beans>
